// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProPet.Data;

#nullable disable

namespace ProPet.Migrations
{
    [DbContext(typeof(PetProDbContext))]
    partial class PetProDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("ProPet.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TutorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Pets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Idade = 3,
                            Nome = "Fígaro",
                            Raca = "SRD",
                            Tipo = "Gato",
                            TutorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Idade = 5,
                            Nome = "Pluto",
                            Raca = "SRD",
                            Tipo = "Cachorro",
                            TutorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Idade = 7,
                            Nome = "Garfield",
                            Raca = "Persa",
                            Tipo = "Gato",
                            TutorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Idade = 6,
                            Nome = "Snoopy",
                            Raca = "Beagle",
                            Tipo = "Cachorro",
                            TutorId = 2
                        });
                });

            modelBuilder.Entity("ProPet.Models.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroContato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Endereco = "Rua do Servidor, 123",
                            Nome = "Admin",
                            NumeroContato = "99999-0001",
                            SobreNome = "do Sistema"
                        },
                        new
                        {
                            Id = 2,
                            Endereco = "Avenida do Cliente, 456",
                            Nome = "Usuário",
                            NumeroContato = "99999-0002",
                            SobreNome = "Padrão"
                        });
                });

            modelBuilder.Entity("ProPet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TutorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "$2a$11$EQ8DKANsZ1Ck8dz7ZjT7AOQA2SGcH3oJ6zLv5zCU9WxVK9sDUWD5y",
                            TutorId = 1,
                            UserRoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "$2a$11$ALlMdekzq5gzlr/dCs/qge7uKAxE77ZrYWeCLxohwTWt5zJO7qoyS",
                            TutorId = 2,
                            UserRoleId = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("ProPet.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Normal"
                        });
                });

            modelBuilder.Entity("ProPet.Models.Pet", b =>
                {
                    b.HasOne("ProPet.Models.Tutor", "Tutor")
                        .WithMany("Pets")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("ProPet.Models.User", b =>
                {
                    b.HasOne("ProPet.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProPet.Models.Tutor", b =>
                {
                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
